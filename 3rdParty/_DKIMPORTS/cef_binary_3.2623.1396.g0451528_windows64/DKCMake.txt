IF(NOT WIN_64)
	RETURN()
ENDIF()

### INSTALL ###
DKINSTALL(${DKDOWNLOAD}/Libs/cef_binary_3.2623.1396.g0451528_windows64.7z cef_binary_3.2623.1396.g0451528_windows64)
DKSET(CEF ${3RDPARTY}/cef_binary_3.2623.1396.g0451528_windows64)


### LINK ###
DKSET(CEF ${3RDPARTY}/cef_binary_3.2623.1396.g0451528_windows64)
DKDEFINE(__STDC_CONSTANT_MACROS)
DKDEFINE(__STDC_FORMAT_MACROS)
DKDEFINE(PSAPI_VERSION=1)
DKDEFINE(NOMINMAX)
DKDEFINE(CEF_SANDBOX)
DKDEFINE(CEF_ATL)

WIN64_INCLUDE(${CEF})
WIN64_DEBUG_LIB(${CEF}/Debug/libcef.lib)
WIN64_RELEASE_LIB(${CEF}/Release/libcef.lib)
WIN64_DEBUG_LIB(${CEF}/${OS}/libcef_dll/Debug/libcef_dll_wrapper.lib)
WIN64_RELEASE_LIB(${CEF}/${OS}/libcef_dll/Release/libcef_dll_wrapper.lib)
#WIN64_DEBUG_LIB(${CEF}/Debug/cef_sandbox.lib)
#WIN64_RELEASE_LIB(${CEF}/Release/cef_sandbox.lib)


### COMPILE ###
DKSETPATH(${CEF}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${X64GENERATOR} ${CEF})
WIN64_VS_DEBUG(cef_binary_3.2623.1396.g0451528_windows64 cef.sln libcef_dll_wrapper)
WIN64_VS_RELEASE(cef_binary_3.2623.1396.g0451528_windows64 cef.sln libcef_dll_wrapper)